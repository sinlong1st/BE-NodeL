<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Weight Trend Analysis</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Pacifico&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .section-card { background:#fff; border-radius:14px; padding:20px; box-shadow:0 6px 18px rgba(0,0,0,0.06); margin:18px auto; max-width:900px; }
    .header-container { display:flex; justify-content:space-between; align-items:center; padding:16px 24px; background:#0f172a; color:#fff; }
    .nav a { color:#cbd5e1; margin-left:14px; text-decoration:none; }
    .muted { color:#64748b; font-size:0.9rem; }
  </style>
</head>
<body>
  <header class="header-container">
    <div><strong>Weight Trend Analysis</strong></div>
    <div class="nav">
      <a href="/">Home</a>
      <a href="/users/<%= user.id %>/weights">Back to Weights</a>
    </div>
  </header>

  <div class="section-card">
    <h1>Weight Trend for <%= user.firstName %> <%= user.lastName %></h1>
    <p class="muted">Below is a chart showing the weight trend over time. You can use this to monitor progress and spot trends.</p>
    <% if (weights && weights.length > 1) { %>
      <canvas id="weightChart" width="800" height="350"></canvas>
    <% } else { %>
      <div style="width:100%; height:350px; display:flex; align-items:center; justify-content:center; background:#f1f5f9; border-radius:12px; font-size:2.2em; color:#64748b; font-weight:700; letter-spacing:2px; margin-bottom:18px;">NO DATA</div>
    <% } %>
    <div style="margin-top:24px;">
      <% if (typeof bodyFatEstimate !== 'undefined' && bodyFatEstimate !== null) { %>
  <div style="background:#f1f5f9; border-radius:10px; padding:12px 24px; margin-bottom:18px; width:100%; box-sizing:border-box;">
          <strong>Estimated Body Fat %:</strong> <span style="font-size:1.2em; font-weight:600; color:#0ea5e9;"><%= bodyFatEstimate %>%</span>
          <span class="muted" style="font-size:0.95em; margin-left:8px;">(<%= bodyFatMethod %>)</span>
        </div>
      <% } %>
        <h3>Analysis</h3>
      <% if (weights && weights.length > 1) { %>
  <ul style="padding-left:18px;">
          <li style="margin-bottom:12px;">Starting weight: <strong><%= weights[0].weight_kg %> kg</strong> on <%= new Date(weights[0].taken_at_utc).toLocaleDateString() %></li>
          <li style="margin-bottom:12px;">Latest weight: <strong><%= weights[weights.length-1].weight_kg %> kg</strong> on <%= new Date(weights[weights.length-1].taken_at_utc).toLocaleDateString() %></li>
          <li style="margin-bottom:12px;">Change: <strong><%= (weights[weights.length-1].weight_kg - weights[0].weight_kg).toFixed(2) %> kg</strong></li>
          <li style="margin-bottom:12px;">Average weight: <strong><%= (weights.reduce((a, w) => a + parseFloat(w.weight_kg), 0) / weights.length).toFixed(2) %> kg</strong></li>
          <% if (user && user.height_cm) { 
               const heightM = user.height_cm / 100;
               const bmi = (weights[weights.length-1].weight_kg / (heightM * heightM)).toFixed(2);
          %>
            <li style="margin-bottom:12px;">Latest BMI: <strong><%= bmi %></strong> (using height <%= user.height_cm %> cm)</li>
            <li style="margin-bottom:12px;">BMI Category: 
              <% if (bmi < 18.5) { %>
                <span style="display:inline-block; padding:2px 12px; border-radius:16px; background:#e0e7ff; color:#1e40af; font-weight:600; font-size:1.5em; margin-left:4px;">Underweight</span>
              <% } else if (bmi < 25) { %>
                <span style="display:inline-block; padding:2px 12px; border-radius:16px; background:#dcfce7; color:#15803d; font-weight:600; font-size:1.5em; margin-left:4px;">Normal</span>
              <% } else if (bmi < 30) { %>
                <span style="display:inline-block; padding:2px 12px; border-radius:16px; background:#fef9c3; color:#b45309; font-weight:600; font-size:1.5em; margin-left:4px;">Overweight</span>
              <% } else { %>
                <span style="display:inline-block; padding:2px 12px; border-radius:16px; background:#fee2e2; color:#dc2626; font-weight:600; font-size:1.5em; margin-left:4px;">Obese</span>
              <% } %>
            </li>
          <% } else { %>
            <li class="muted" style="margin-bottom:12px;">No height data for BMI calculation.</li>
          <% } %>
        </ul>

        <% if (typeof latestBMI !== 'undefined' && latestBMI !== null) { %>
          <h3>BMI Scale</h3>
          <div style="margin-top:18px; max-width:720px;">
            
            <div class="muted" style="font-size:0.95em; margin-bottom:8px;">The bar shows BMI categories across a 12–40 range; the triangle marks your latest BMI.</div>
            <div id="bmi-scale" style="position:relative; height:28px; border-radius:8px; overflow:hidden; background:#f1f5f9;"></div>
            <div style="position:relative; height:0; margin-top:6px;">
              <div id="bmi-triangle" style="position:absolute; top:-18px; width:0; height:0; border-left:9px solid transparent; border-right:9px solid transparent; border-bottom:14px solid #000; transform:translateX(-50%);"></div>
            </div>
            <div style="margin-top:10px; display:flex; gap:12px; align-items:center;"><div style="font-weight:700;">Your BMI:</div><div id="bmi-value" style="color:#0ea5e9; font-weight:700;"></div><div id="bmi-cat" class="muted"></div></div>
          </div>
        <% } %>
        
        <!-- Goal: show weight targets to reach Normal BMI range -->
        <% if (user && user.height_cm && weights && weights.length > 0) {
             const latestWeight = parseFloat(weights[weights.length-1].weight_kg);
             const heightM = user.height_cm / 100;
             const minNormalWeight = 18.5 * heightM * heightM;
             const maxNormalWeight = 24.9 * heightM * heightM;
             const idealWeight = 22 * heightM * heightM;
             const needToLose = latestWeight - maxNormalWeight;
             const needToGain = minNormalWeight - latestWeight;
        %>
        <h3>Goal</h3>
          <div style="margin-top:18px; max-width:720px; background:#fff; padding:12px; border-radius:10px; box-shadow:0 6px 18px rgba(2,6,23,0.04);">
            
            <% if (needToLose > 0) { %>
              <div><strong>To reach the Normal BMI range (≤ 24.9):</strong> you should lose <strong><%= needToLose.toFixed(2) %> kg</strong> to reach <strong><%= maxNormalWeight.toFixed(2) %> kg</strong>.</div>
              <div class="muted" style="margin-top:6px;">Ideal midpoint target (BMI 22): <strong><%= idealWeight.toFixed(2) %> kg</strong> — you'll need to lose <strong><%= (latestWeight - idealWeight).toFixed(2) %> kg</strong>.</div>
            <% } else if (needToGain > 0) { %>
              <div><strong>To reach the Normal BMI range (≥ 18.5):</strong> you should gain <strong><%= needToGain.toFixed(2) %> kg</strong> to reach <strong><%= minNormalWeight.toFixed(2) %> kg</strong>.</div>
              <div class="muted" style="margin-top:6px;">Ideal midpoint target (BMI 22): <strong><%= idealWeight.toFixed(2) %> kg</strong> — you'll need to gain <strong><%= (idealWeight - latestWeight).toFixed(2) %> kg</strong>.</div>
            <% } else { %>
              <div><strong>You're in the Normal BMI range.</strong></div>
              <div class="muted" style="margin-top:6px;">Current weight: <strong><%= latestWeight.toFixed(2) %> kg</strong>. To reach an ideal BMI of 22 aim for <strong><%= idealWeight.toFixed(2) %> kg</strong> (<strong><%= (idealWeight - latestWeight).toFixed(2) %> kg</strong> change).</div>
            <% } %>
            <div style="margin-top:10px; font-size:0.95em; color:#64748b;">These targets are guidance only; consider consulting a clinician for personalized goals.</div>
          </div>
        <% } %>
          <% if (user && user.height_cm) { %>
            <h3>General Advice</h3>
            <div style="margin-top:14px; max-width:720px; background:#fff; padding:12px; border-radius:10px; box-shadow:0 6px 18px rgba(2,6,23,0.04);">
              <ul style="margin:0; padding-left:18px;">
                <li style="margin-bottom:8px;"><strong>Calories:</strong> To lose ~0.5 kg/week aim for ~500 kcal/day deficit; to gain ~0.5 kg/week aim for ~+500 kcal/day surplus. Adjust based on progress.</li>
                <% if (weights && weights.length > 0) {
                     const latestW = parseFloat(weights[weights.length-1].weight_kg);
                     const proteinMin = Math.round(latestW * 1.2);
                     const proteinMax = Math.round(latestW * 1.8);
                %>
                  <li style="margin-bottom:8px;"><strong>Protein:</strong> Aim for <strong><%= proteinMin %>–<%= proteinMax %> g/day</strong> (~1.2–1.8 g/kg of your current weight <%= latestW.toFixed(1) %> kg) to support muscle mass.</li>
                <% } else { %>
                  <li style="margin-bottom:8px;"><strong>Protein:</strong> Consume ~1.2–1.8 g/kg body weight/day to support muscle mass (higher during weight loss or strength training).</li>
                <% } %>
                <li style="margin-bottom:8px;"><strong>Exercise:</strong> Combine resistance training (2–3x/week) with 150+ minutes/week moderate cardio. Strength training helps preserve/build muscle during weight change.</li>
                <li style="margin-bottom:8px;"><strong>Food choices:</strong> Favor whole foods: lean protein, vegetables, whole grains, healthy fats; limit sugary drinks and heavily processed snacks.</li>
                <li style="margin-bottom:8px;"><strong>Hydration & sleep:</strong> Aim for 7–9 hours sleep and regular hydration — both support recovery and appetite regulation.</li>
              </ul>
              <div class="muted" style="margin-top:8px; font-size:0.9em;">These are general suggestions. For personalized plans, allergies, medical conditions, or major weight changes consult a registered dietitian or healthcare provider.</div>
            </div>
          <% } %>
      <% } else { %>
        <div class="muted">Not enough data for analysis.</div>
      <% } %>
      <h3>BMI Categories</h3>
  <table style="width:100%; max-width:700px; margin-bottom:18px; border-collapse:collapse; border:2px solid #64748b; border-radius:8px; overflow:hidden; margin-left:auto; margin-right:auto; text-align:center;">
        <thead>
          <tr style="background:#f1f5f9;">
            <th style="padding:8px; border:1px solid #e2e8f0;">BMI Range</th>
            <th style="padding:8px; border:1px solid #e2e8f0;">Category</th>
          </tr>
        </thead>
        <tbody>
          <tr style="background:#e0e7ff;"><td style="padding:8px; border:1px solid #e2e8f0;">Less than 18.5</td><td style="padding:8px; border:1px solid #e2e8f0; color:#1e40af; font-weight:600;">Underweight</td></tr>
          <tr style="background:#dcfce7;"><td style="padding:8px; border:1px solid #e2e8f0;">18.5 – 24.9</td><td style="padding:8px; border:1px solid #e2e8f0; color:#15803d; font-weight:600;">Normal weight</td></tr>
          <tr style="background:#fef9c3;"><td style="padding:8px; border:1px solid #e2e8f0;">25 – 29.9</td><td style="padding:8px; border:1px solid #e2e8f0; color:#b45309; font-weight:600;">Overweight</td></tr>
          <tr style="background:#fee2e2;"><td style="padding:8px; border:1px solid #e2e8f0;">30 or more</td><td style="padding:8px; border:1px solid #e2e8f0; color:#dc2626; font-weight:600;">Obese</td></tr>
        </tbody>
      </table>
      <div class="muted" style="margin-bottom:18px;">BMI (Body Mass Index) is a simple index of weight-for-height that is commonly used to classify underweight, normal weight, overweight, and obesity in adults. <br>Formula: <strong>BMI = weight (kg) / [height (m)]²</strong></div>
      
    </div>
  </div>

  <script>
  var labels = JSON.parse('<%- JSON.stringify(chartLabels || []) %>');
  var data = JSON.parse('<%- JSON.stringify((weights || []).map(function(w){ return w.weight_kg; })) %>');
  var datetimes = JSON.parse('<%- JSON.stringify(chartDatetimes || []) %>');
  var minY = Math.min.apply(null, data);
  var maxY = Math.max.apply(null, data);
  minY = Math.floor(minY - 2); // Set y-axis min a bit below the lowest weight
  maxY = Math.ceil(maxY + 2);  // Set y-axis max a bit above the highest weight
  </script>
  <script>
    // Safe parse of latestBMI and category
    var latestBMI = JSON.parse('<%- JSON.stringify(typeof latestBMI !== "undefined" ? latestBMI : null) %>');
    var userBmiCategory = JSON.parse('<%- JSON.stringify(typeof userBmiCategory !== "undefined" ? userBmiCategory : null) %>');

    // BMI thresholds and their colors
    var thresholds = [12, 18.5, 25, 30, 40]; // min, underweight end, normal end, overweight end, max
    var colors = ['#e0e7ff', '#dcfce7', '#fef9c3', '#fee2e2'];

    function renderBmiScale() {
      var container = document.getElementById('bmi-scale');
      if (!container) return;
      // Compute segment widths proportionally across thresholds
      var min = thresholds[0], max = thresholds[4];
      container.innerHTML = '';
      for (var i = 0; i < 4; i++) {
        var segMin = thresholds[i];
        var segMax = thresholds[i+1];
        var widthPct = ((segMax - segMin) / (max - min)) * 100;
        var seg = document.createElement('div');
        seg.style.width = widthPct + '%';
        seg.style.height = '100%';
        seg.style.display = 'inline-block';
        seg.style.background = colors[i];
        container.appendChild(seg);
      }
      // position triangle
      var tri = document.getElementById('bmi-triangle');
      var valueEl = document.getElementById('bmi-value');
      var catEl = document.getElementById('bmi-cat');
      if (latestBMI !== null && tri) {
        var pct = ((Math.max(min, Math.min(max, latestBMI)) - min) / (max - min)) * 100;
        // place triangle relative to container width
        // container may not have explicit width; use offsetWidth
        var containerRect = container.getBoundingClientRect();
        var left = (pct / 100) * containerRect.width;
        tri.style.left = left + 'px';
        tri.style.borderBottomColor = (function(cat){
          if (!cat) return '#000';
          if (cat === 'Underweight') return '#1e40af';
          if (cat === 'Normal') return '#15803d';
          if (cat === 'Overweight') return '#b45309';
          if (cat === 'Obese') return '#dc2626';
          return '#000';
        })(userBmiCategory);
        if (valueEl) valueEl.textContent = latestBMI;
        if (catEl) catEl.textContent = userBmiCategory ? '(' + userBmiCategory + ')' : '';
      }
    }

    // render after load and on resize
    window.addEventListener('load', renderBmiScale);
    window.addEventListener('resize', function(){ setTimeout(renderBmiScale, 60); });
  </script>
  <script>
    if (labels.length > 0) {
      const ctx = document.getElementById('weightChart').getContext('2d');
  new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: 'Weight (kg)',
            data: data,
            borderColor: '#0ea5e9',
            backgroundColor: 'rgba(14,165,233,0.1)',
            fill: true,
            tension: 0.2,
            pointRadius: 4,
            pointBackgroundColor: '#0ea5e9',
            pointBorderColor: '#fff',
            pointHoverRadius: 6
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { display: true },
            title: { display: false },
            tooltip: {
              callbacks: {
                title: function(context) {
                  // context[0].dataIndex gives the index in the data array
                  return datetimes[context[0].dataIndex];
                }
              }
            }
          },
          scales: {
            x: { title: { display: true, text: 'Date' } },
            y: { title: { display: true, text: 'Weight (kg)' }, beginAtZero: false, min: minY, max: maxY }
          }
        }
      });
    }
  </script>
</body>
</html>
